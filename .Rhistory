cat('SSE (Augmented) = ', sseA,  '\n', sep=' ')
cat('Delta R-Squared = ', DeltaR2,  '\n', sep=' ')
cat('Partial Eta-Squared (PRE) = ', PRE,  '\n', sep=' ')
cat('F(', nDF, ',', dDF, ') = ', FStat, ', ', 'p = ', p, '\n', sep='')
}
Results = list(sseC=sseC, sseA=sseA, pC=pC, pA=pA, nDF=nDF, dDF=dDF, Fstat=FStat, p=p,  PRE=PRE, DeltaR2=DeltaR2)
invisible(Results)  #return but dont print list
}
for(a %in% apple){
attr(a, "names") <- "freak"
}
for(a %in% apple){
lapply(apple, FUN = function(x){attr(x, "names") <- c("name")})
apple
apple[1]
apple[[1]]
apple <- list(list(1,2,3), list(4,5,6), list(7,8,9))
lapply(apple, FUN = function(x){attr(x, "names") <- c("name")})
lapply(apple, FUN = function(x){attr(x, "names") <- c("name", "name2", "name3")})
apple[[1]]
lapply(Results, function(x){attr(x, "names") <- c("Model 1", "Model 2", "Model 3")})
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
modelstuff$Checks$standres
modelstuff$Checks$standresids
modelstuff$Checks$dw
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
library(AutoModel)
library(AutoModel)
library(AutoModel)
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
library(AutoModel)
roxyyen2::roxygenize()
roxygen2::roxygenize()
library(AutoModel)
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
modelstuff <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
modelstuff$Summary
modelstuff
rownames(modelstuff$Summary)
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
library(rowr)
packrat::set_opts(external.packages = c("rowr"))
roxygen2::roxygenize()
remove.packages("rowr", lib="~/Documents/AutoModel/packrat/lib/x86_64-pc-linux-gnu/3.2.0")
install.packages("rowr")
install.packages("rowr")
library(rowr)
install.packages("rowr")
install.packages("rowr")
install.packages("~/Downloads/rowr_1.1.2.tar.gz", repos = NULL, type = "source")
packrat::set_opts(external.packages = "")
library(AutoModel)
packrat::snapshot(prompt = FALSE)
library(AutoModel)
install.packages("rowr")
library("rowr", lib.loc="~/Documents/AutoModel/packrat/lib/x86_64-pc-linux-gnu/3.2.0")
devtools::build()
roxygen2::roxygenize()
library(AutoModel)
roxygen2::roxygenize()
library(AutoModel)
packrat::disable()
R CMD check
roxygen2::roxygenize()
devtools::document(roclets=c('rd', 'collate', 'namespace'))
library(AutoModel)
library(AutoModel)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
test_mod <- lm(y ~ lag.quarterly.revenue, data = freeny)
test_mod$call
formula(test_mod)
formula(test_mod)
test_mod <- lm(y ~ lag.quarterly.revenue, data = freeny)
formula(test_mod)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
test_mod <- lm(y ~ lag.quarterly.revenue, data = freeny)
formula(test_mod)
formula(test_mod)
print(formula(test_mod))
as.character(formula(test_mod))
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/tests.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
test_mod <- lm(y ~ lag.quarterly.revenue, data = freeny)
formula(test_mod)
print(formula(test_mod))
deparse(formula(test_mod))
RR <- "fasfd"
RR
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, assumptions.check = F)
fasdf <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, assumptions.check = F)
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
fasdf <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, assumptions.check = F)
library(AutoModel)
source('~/Documents/AutoModel/R/tests.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
library(AutoModel)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = 10)
library(AutoModel)
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
library(AutoModel)
1:10
filter(1:10)
filter(1:10, >10)
filter(1:10, x>10)
library(dpylr)
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
rnorm(100, 1, 1)
table(rnorm(100, 1, 1))
data.frame(rnorm(100, 1, 1))
names <- data.frame(rnorm(100, 1, 1))
filter(names, rnorm.100..1..1. > 1)
filter(names, rnorm.100..1..1. > 1, rnorm.100..1..1. < 0)
?dplyr
filter(names, rnorm.100..1..1. > 1)
filter(names, rnorm.100..1..1. < 0)
filter(names, rnorm.100..1..1. > 1) + filter(names, rnorm.100..1..1. < 0)
c(filter(names, rnorm.100..1..1. > 1), filter(names, rnorm.100..1..1. < 0))
typeof(filter(names, rnorm.100..1..1. > 1))
list(filter(names, rnorm.100..1..1. > 1), filter(names, rnorm.100..1..1. < 0))
rbind(filter(names, rnorm.100..1..1. > 1), filter(names, rnorm.100..1..1. < 0))
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
roxygen2::roxygenize()
library(rowr)
install.packages("rowr")
library(AutoModel)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
source('~/Documents/AutoModel/R/runmodel.R')
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
list(1:10)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
c(1:10)
x <- 1:10
x[x > 5]
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
test_mod_two <- lm(y ~ lag.quarterly.revenue + price.index, data= freeny)
test_mod_two$call
test_mod_two$call$data
a <- test_mod_two$call$data
a <- test_mod_two$call$data
a
a$price.index
as.character(a)
as.character(a)$price.index
freeny
typeof(freeny)
a <- test_mod_two$call$data
a
typeof(a)
as.name(a)
b <- as.name(a)
b
b$price.index
assign(a)
get(a)
a
deparse(a)
deparse(a)
b <- deparse(a)
b
parse(a)
parse(as.character(a))
b <- deparse(as.character(a))
b
a <- test_mod_two$call$data
typeof(a)
as.call(a)
as.call(as.character(a))
as.data.frame(a)
a$price.index
as.character(a)
b <- as.character(a)
b
as.name(b)
typeof(as.name(b))
do.call(b)
get(b)
get(a)
dataframe <- get(b)
dataframe$new <- NA
freeny
dataframe
get(b)$price.index
get(b)$newnew <- NA
get(b)$newnew
quote("b")
quote(b)
quote(get(b)$nenen <- NA)
eval(a)
eval(a)$price.index
c <- eval(a)
c$nen <- NA
freeny
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
?evalu
?eval
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
?eval
environment(datasets)
.GlobalEnv
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
freeny
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
mtcars
mydata <- mtcars
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mydata, outliers.check = "all")
library(AutoModel)
mydata <- mtcars
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mydata, outliers.check = "all")
library(AutoModel)
mydata <- mtcars
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mydata, outliers.check = "all")
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mydata, outliers.check = "all")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "all")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
model_object <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars)
model_object$Summary$DeltaR2
model_object$Coefficients$estimate
model_object$Checks$Correlation.Matrix
```
library(xtable)
model_object$Summary
model_object
as.data.frame(model_object$Summary)
xtable(as.data.frame(model_object$Summary))
library(AutoModel)
run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
model$TablePrint
xtable(model$TablePrint)
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
xtable(model$)
xtable(model$SummaryDF)
c("Model", "Facebook")
paste("Model", "1", "This ~ That")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
source('~/Documents/AutoModel/R/runmodel.R')
source('~/Documents/AutoModel/R/runmodel.R')
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
#modelz <- create_model_objects(create_formula_objects("y", c("lag.quarterly.revenue"), c("price.index", "income.level")), dataset=freeny)
#run_model("y", c("lag.quarterly.revenue"), c("price.index", "income.level"), dataset=freeny)
#create_formula_objects("y", c("lag.quarterly.revenue"), c("price.index", "income.level"))
#formels <- create_formula_objects("am", c("hp", "mpg"), c("disp"), c("drat"))
#moduls <- create_model_objects(formels, data=mtcars, type="binomial")
#moduls
#model_summary_table_binomial(moduls)
#head(mtcars)
#model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
output_matrix <- data.frame(ncol=10)
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
model <- run_model("mpg", c("disp", "hp"), c("cyl", "wt"), c("drat", "qsec"), dataset=mtcars, outliers.check = "significant")
library(AutoModel)
library(AutoModel)
library(AutoModel)
library(AutoModel)
library(AutoModel)
library(AutoModel)
print(tab, type="html")
roxygen2::roxygenize()
?roxygenize
roxygen2::roxygenize(clean=T)
library(AutoModel)
library(AutoModel)
roxygenize()
roxygen2::roxygenize()
library(AutoModel)
mtcars
run_model("am", c("disp", "hp"), c("drat", "wt"), dataset = mtcars, type = "binomial")
glm(am ~ disp + hp + drat + wt, dataset = mtcars)
head(mtcars)
glm(vs ~ disp + hp + drat + wt, dataset = mtcars)
glm(am ~ disp + hp + drat + wt, dataset = mtcars, family = "binomial")
glm(vs ~ disp + hp + drat + wt, dataset = mtcars, family = "binomial")
glm(vs ~ disp + hp + drat + wt, data = mtcars, family = "binomial", )
binmod <- glm(vs ~ disp + hp + drat + wt, data = mtcars, family = "binomial", )
summary(binmod)
binmod <- glm(vs ~ disp + hp + drat + wt, data = mtcars, family = "binomial")
summary(binmod)
run_model("am", c("disp", "hp"), c("drat", "wt"), dataset = mtcars, type = "binomial")
binmod <- glm(am ~ disp + hp + drat + wt, data = mtcars, family = "binomial")
summary(binmod)
binmod <- glm(am ~ disp + hp, data = mtcars, family = "binomial")
summary(binmod)
install.packages(c("crayon", "pryr", "testthat", "XML"))
install.packages("lmSupport")
install.packages("~/Downloads/lmSupport_2.9.2.tar.gz", repos = NULL, type = "source")
library("lmSupport", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
model1 <- lm(disp ~ hp + wt, data = mtcars)
model2 <- lm(disp ~ hp + drat, data = mtcars)
modelCompare(model1, model2)
model2 <- lm(disp ~ hp + am + drat, data = mtcars)
modelCompare(model1, model2)
